apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-cm
  namespace: routing
data:
  haproxy.cfg: |
    resolvers coredns
       nameserver n1 10.96.0.10:53
    defaults
       mode tcp
       log global
       balance roundrobin
       timeout client 30s
    frontend incoming
       mode tcp
       bind *:443
       option tcplog
       tcp-request inspect-delay 5s
       tcp-request content accept if { req_ssl_hello_type 1 }
       acl prod_acl req_ssl_sni -m sub -i mno-prod.io
       acl ref_acl req_ssl_sni -m sub -i mno-ref.io
       acl sys_acl req_ssl_sni -m sub -i mno.io
       use_backend ref_backend if ref_acl
       use_backend prod_backend if prod_acl
       use_backend system_backend if sys_acl
       use_backend test_backend
    backend prod_backend
       mode tcp
       timeout server 30s
       timeout client 30s
       timeout connect 30s
       server proding ing-prod-svc.prod.svc.cluster.local:443 resolvers coredns
    backend ref_backend
       mode tcp
       timeout server 30s
       timeout client 30s
       timeout connect 30s
       server refing ing-ref-svc.ref.svc.cluster.local:443 resolvers coredns
    backend test_backend
       mode tcp
       timeout server 30s
       timeout client 30s
       timeout connect 30s
       server def ing-default-svc.default.svc.cluster.local:443 resolvers coredns
    backend system_backend
       mode tcp
       timeout server 30s
       timeout client 30s
       timeout connect 30s
       server def ing-system-svc.kube-system.svc.cluster.local:443 resolvers coredns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: haproxy
  name: haproxy
  namespace: routing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haproxy
  template:
    metadata:
      labels:
        app: haproxy
    spec:
      securityContext:
        runAsUser: 0
        #sysctls:
        #- name: net.ipv4.ip_unprivileged_port_start
        #  value: "60"
      containers:
      - image: haproxy
        name: haproxy
        ports:
        - containerPort: 443
          hostPort: 443
          protocol: TCP
        volumeMounts:
        - name: cfg
          mountPath: /usr/local/etc/haproxy/haproxy.cfg
          subPath: haproxy.cfg
      hostNetwork: true
      volumes:
      - name: cfg
        configMap:
          name: haproxy-cm
